pipeline {
    environment {
        SONAR_TOKEN = credentials('sonarcloud-token')
        SONAR_ORG = 'Pipeline-Jenkins'  // La organización configurada en SonarCloud
        SONAR_PROJECT = 'Repo-SonarCloud-Dependecy-check'   // El Project Key copiado de SonarCloud
    }
    agent any

    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/lucaseveron/Repo-SonarCloud-Dependecy-check.git'
            }
        }
        stage('SonarCloud Analysis') {
            steps {
                withSonarQubeEnv('SonarCloud') {
                    sh '''
                    mvn sonar:sonar \
                        -Dsonar.organization=$SONAR_ORG \
                        -Dsonar.projectKey=$SONAR_PROJECT \
                        -Dsonar.login=$SONAR_TOKEN
                    '''
                }
            }
        }
        stage('OWASP Dependency-Check') {
            steps {
                dependencyCheck additionalArguments: '--project "My Project" --scan ./', odcInstallation: 'Dependency-Check'
            }
        }
        stage('Quality Gate') {
            steps {
                script {
                    def qg = waitForQualityGate()
                    if (qg.status != 'OK') {
                        error "La calidad del código no pasó el Quality Gate: ${qg.status}"
                    }
                }
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}
