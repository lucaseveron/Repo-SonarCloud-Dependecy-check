pipeline {
    agent any

    environment {
        SONAR_TOKEN = credentials('sonarcloud-token')
        SONAR_ORG = 'your-organization-key'
        SONAR_PROJECT = 'your-project-key'
    }

    stages {
        stage('SonarCloud Analysis') {
            steps {
                sh '''
                #!/bin/bash
                if [ -z "$SONAR_ORG" ] || [ -z "$SONAR_PROJECT" ] || [ -z "$SONAR_TOKEN" ]; then
                  echo "Error: Las variables de entorno SONAR_ORG, SONAR_PROJECT o SONAR_TOKEN no están definidas."
                  exit 1
                fi

                mvn sonar:sonar \
                  -Dsonar.organization="$SONAR_ORG" \
                  -Dsonar.projectKey="$SONAR_PROJECT" \
                  -Dsonar.login="$SONAR_TOKEN"
                '''
            }
        }
    }
}
        stage('OWASP Dependency-Check') {
            steps {
                dependencyCheck additionalArguments: '--project "My Project" --scan ./', odcInstallation: 'Dependency-Check'
            }
        }
        stage('Quality Gate') {
            steps {
                script {
                    def qg = waitForQualityGate()
                    if (qg.status != 'OK') {
                        error "La calidad del código no pasó el Quality Gate: ${qg.status}"
                    }
                }
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}
